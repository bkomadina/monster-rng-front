{"version":3,"sources":["assets/scripts/renderMonster.js","assets/scripts/difficulty.js","assets/scripts/renderHome.js","assets/scripts/fightMonster.js","assets/scripts/createMonster.js"],"names":["renderMonster","mainBody","document","getElementById","innerHTML","randomMonster","name","setTimeout","determineDifficulty","hp","damage","renderHome","formCreate","formDifficulty","querySelector","value","addEventListener","createMonsterHandler","getMonsterHandler","fightMonster","monsterMaxHp","currentMonsterHp","currentPlayerHp","healUses","HP","monsterDamage","monsterHpProg","playerHpProg","attackBtn","heavyAttackkBtn","healBtn","retryBtn","homeBtn","setMaxHp","monsterHp","max","randomDamage","Math","round","random","monsterAttack","monsterDmg","playerAttack","playerDmg","checkWin","playerHeavyAtt","playerDamage","playerHeal","bind","removeEventListener","clearForm","form","reset","notificationToggle","text","type","notification","notificationText","classList","toggle","innerText","notificationHandler","window","closingAnimation","event","preventDefault","fetch","method","headers","body","JSON","stringify","toUpperCase","difficulty","then","response","status","Error","json","data","console","log","localStorage","setItem","_id","catch","error","lastCreatedId","parse","getItem"],"mappings":"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","file":"createMonster.57a75d23.js","sourceRoot":"..","sourcesContent":["import { closingAnimation } from './createMonster.js';\r\n\r\nexport const renderMonster = () => {\r\n    const mainBody = document.getElementById('background');\r\n    mainBody.innerHTML = '';\r\n    mainBody.innerHTML = `\r\n    <section>\r\n    <section class=\"up up-close\">\r\n      <h1 class=\"monster-name\">${randomMonster.name} HP:</h1>\r\n      <progress id=\"monster-hp\" max=\"\" value=\"\"></progress>\r\n      <h1 class=\"player\">Your HP:</h1>\r\n      <progress id=\"player-hp\" max=\"\" value=\"\"></progress>\r\n      <div class=\"fight-container\">\r\n        <button id=\"att-btn\" class=\"fight-btn\">Attack</button>\r\n        <button id=\"heavy-att-btn\" class=\"fight-btn\">Heavy Attack</button>\r\n      </div>\r\n    </section>\r\n    </section>\r\n    <section>\r\n    <section class=\"down down-close\">\r\n      <div class=\"heal\">\r\n        <button id=\"heal-btn\" class=\"fight-btn\">Heal</button>\r\n      </div>\r\n      <button id=\"retry-btn\">Retry</button>\r\n      <button id=\"home-btn\">Create another monster</button>\r\n    </section>\r\n    </section>\r\n  `;\r\n  setTimeout(() => {\r\n    closingAnimation();\r\n  }, 100);\r\n};\r\n","export const determineDifficulty = (hp, damage) => {\r\n  if (damage <= 12 && hp <= 70 || damage <= 7 && hp <= 130 || damage <= 30 && hp <= 25) {\r\n    return 'easy'\r\n  } else if (damage <= 15 && hp <= 80 || damage <= 9 && hp <= 140 || damage <= 30 && hp <= 35)   {\r\n    return 'medium'\r\n  } else {\r\n    return 'hard'\r\n  }\r\n}","import { getMonsterHandler } from './createMonster.js';\r\nimport { createMonsterHandler } from './createMonster.js';\r\nimport { closingAnimation } from './createMonster.js';\r\n\r\nexport const renderHome = () => {\r\n  const mainBody = document.getElementById('background');\r\n  mainBody.innerHTML = '';\r\n  mainBody.innerHTML = `\r\n  <section>\r\n  <section class=\"up up-close\">\r\n      <h1 class=\"top-heading\">Create your monster</h1>\r\n      <form id=\"form-create\">\r\n        <label for=\"name\">Name:</label>\r\n        <input id=\"name\" type=\"text\" minlength=\"2\" maxlength=\"20\">\r\n        <label for=\"HP\">HP:</label>\r\n        <input id=\"HP\" type=\"number\" min=\"15\" max=\"160\">\r\n        <label for=\"damage\">Damage:</label>\r\n        <input id=\"damage\" type=\"number\" min=\"5\" max=\"30\">\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n      <!-- <div class=\"border\"></div> -->\r\n    </section>\r\n    </section>\r\n    <section>\r\n    <section class=\"down down-close\">\r\n      <h1 class=\"bottom-heading\">Select difficulty:</h1>\r\n      <form id=\"form-difficulty\">\r\n          <ul>\r\n            <li>\r\n              <input name=\"difficulty\" id=\"easy\" value=\"easy\" type=\"radio\" checked=\"checked\" class=\"circle\">\r\n              <label for=\"easy\">Easy</label>\r\n            </li>\r\n            <li>\r\n              <input name=\"difficulty\" id=\"medium\" value=\"medium\" type=\"radio\" class=\"circle\">\r\n              <label for=\"medium\">Medium</label>\r\n              </li>\r\n              <li>\r\n                <input name=\"difficulty\" id=\"hard\" value=\"hard\" type=\"radio\" class=\"circle\">\r\n                <label for=\"hard\">Hard</label>\r\n              </li>\r\n              <li class=\"last\">\r\n                <input name=\"difficulty\" id=\"last\" value=\"last\" type=\"radio\" class=\"circle\">\r\n                <label for=\"last\">Last Created</label>\r\n              </li>\r\n              <li class=\"last\">\r\n                <button id=\"fight-monster-btn\" type=\"submit\">Fight random monster</button>\r\n              </li>\r\n            </ul>\r\n        </form>\r\n    </section>\r\n    </section>\r\n`;\r\nsetTimeout(() => {\r\n  closingAnimation();\r\n}, 100);\r\n  const formCreate = document.getElementById('form-create');\r\n  const formDifficulty = document.getElementById('form-difficulty');\r\n  const difficulty = formDifficulty.querySelector('input[name=\"difficulty\"]:checked').value;\r\n\r\n  formCreate.addEventListener('submit', createMonsterHandler);\r\n  formDifficulty.addEventListener('submit', getMonsterHandler);\r\n};\r\n","import { renderHome } from './renderHome.js';\r\nimport { closingAnimation, notificationToggle } from './createMonster.js';\r\n\r\nexport const fightMonster = () => {\r\n  let monsterMaxHp = +randomMonster.HP;\r\n  let monsterDamage = +randomMonster.damage;\r\n  let currentMonsterHp;\r\n\r\n  const playerMaxHp = 100;\r\n  const playerDamage = 10;\r\n  let currentPlayerHp;\r\n  let healUses;\r\n\r\n  const monsterHpProg = document.getElementById('monster-hp');\r\n  const playerHpProg = document.getElementById('player-hp');\r\n  const attackBtn = document.getElementById('att-btn');\r\n  const heavyAttackkBtn = document.getElementById('heavy-att-btn');\r\n  const healBtn = document.getElementById('heal-btn');\r\n  const retryBtn = document.getElementById('retry-btn');\r\n  const homeBtn = document.getElementById('home-btn');\r\n\r\n  const setMaxHp = (monsterHp) => {\r\n    monsterHpProg.max = monsterHp;\r\n    monsterHpProg.value = monsterHp;\r\n    currentMonsterHp = monsterHp;\r\n\r\n    playerHpProg.max = playerMaxHp;\r\n    playerHpProg.value = playerMaxHp;\r\n    currentPlayerHp = playerMaxHp;\r\n    healUses = true;\r\n  };\r\n\r\n  const randomDamage = () => {\r\n    return Math.round((Math.random() - 0.5) * 10);\r\n  };\r\n\r\n  const monsterAttack = () => {\r\n    let monsterDmg = monsterDamage + randomDamage();\r\n    if (monsterDmg < 0) {\r\n      monsterDmg = 0;\r\n    }\r\n    currentPlayerHp -= monsterDmg;\r\n    playerHpProg.value = currentPlayerHp;\r\n  };\r\n\r\n  const playerAttack = () => {\r\n    let playerDmg = playerDamage + randomDamage();\r\n    currentMonsterHp -= playerDmg;\r\n    monsterHpProg.value = currentMonsterHp;\r\n    monsterAttack();\r\n    checkWin();\r\n  };\r\n\r\n  const playerHeavyAtt = () => {\r\n    let playerDmg = playerDamage * 1.8 + randomDamage();\r\n    currentMonsterHp -= playerDmg;\r\n    monsterHpProg.value = currentMonsterHp;\r\n    monsterAttack();\r\n    if (checkWin()) {\r\n      return;\r\n    } else {\r\n      monsterAttack();\r\n    }\r\n  };\r\n\r\n  const playerHeal = () => {\r\n    if (healUses) {\r\n      currentPlayerHp += 45 + randomDamage();\r\n      if (currentPlayerHp >= playerMaxHp) {\r\n        currentPlayerHp = playerMaxHp;\r\n        playerHpProg.value = currentPlayerHp;\r\n      } else {\r\n        playerHpProg.value = currentPlayerHp;\r\n      }\r\n      healUses = false;\r\n      monsterAttack();\r\n      checkWin();\r\n    } else {\r\n      notificationToggle('No healing uses left', 'stay');\r\n    }\r\n  };\r\n\r\n  const checkWin = () => {\r\n    if (currentMonsterHp <= 0 && currentPlayerHp >= 0) {\r\n      notificationToggle('You won!', 'stay');\r\n      setMaxHp(monsterMaxHp);\r\n      return true;\r\n    } else if (currentPlayerHp <= 0 && currentMonsterHp >= 0) {\r\n      notificationToggle('You lost!', 'stay');\r\n      setMaxHp(monsterMaxHp);\r\n      return true;\r\n    } else if (currentMonsterHp <= 0 && currentPlayerHp <= 0) {\r\n      notificationToggle('Draw!', 'stay');\r\n      setMaxHp(monsterMaxHp);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const clearListenersRenderHomeHandler = () => {\r\n    attackBtn.removeEventListener('click', playerAttack);\r\n    heavyAttackkBtn.removeEventListener('click', playerHeavyAtt);\r\n    healBtn.removeEventListener('click', playerHeal);\r\n    retryBtn.removeEventListener('click', setMaxHp.bind(this, monsterMaxHp));\r\n    homeBtn.removeEventListener('click', renderHome);\r\n    closingAnimation();\r\n    setTimeout(() => {\r\n      renderHome();\r\n    }, 600);\r\n  };\r\n\r\n  setMaxHp(monsterMaxHp);\r\n\r\n  attackBtn.addEventListener('click', playerAttack);\r\n  heavyAttackkBtn.addEventListener('click', playerHeavyAtt);\r\n  healBtn.addEventListener('click', playerHeal);\r\n\r\n  retryBtn.addEventListener('click', setMaxHp.bind(this, monsterMaxHp));\r\n\r\n  homeBtn.addEventListener('click', clearListenersRenderHomeHandler);\r\n};\r\n","import { renderMonster } from './renderMonster.js';\r\nimport { determineDifficulty } from './difficulty.js';\r\nimport { fightMonster } from './fightMonster.js';\r\n\r\nconst formCreate = document.getElementById('form-create');\r\nconst formDifficulty = document.getElementById('form-difficulty');\r\n\r\nconst clearForm = (form) => {\r\n  form.reset();\r\n};\r\n\r\nexport const notificationToggle = (text, type = 'timed') => {\r\n  const notification = document.querySelector('.notification');\r\n  const notificationText = document.querySelector('#notificationType');\r\n  \r\n  notification.classList.toggle('active');\r\n  notificationText.classList.toggle('notificationText');\r\n  notificationText.innerText = `${text}`;\r\n\r\n  const notificationHandler = () => {\r\n    notificationText.innerText = ``;\r\n    notification.classList.toggle('active');\r\n    notificationText.classList.toggle('notificationText');\r\n    window.removeEventListener('mouseup', notificationHandler);\r\n  };\r\n  \r\n  if (type === 'stay') {\r\n    window.addEventListener('mouseup', notificationHandler);\r\n  } else {\r\n    setTimeout(notificationHandler, 2000);\r\n  }\r\n};\r\n\r\nexport const closingAnimation = () => {\r\n  document.querySelector('.up').classList.toggle('up-close');\r\n  document.querySelector('.down').classList.toggle('down-close');\r\n};\r\n\r\nexport const createMonsterHandler = (event) => {\r\n  event.preventDefault();\r\n  const formCreate = document.getElementById('form-create');\r\n  fetch('http://localhost:3000/add-monster', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      name: formCreate.name.value.toUpperCase(),\r\n      HP: formCreate.HP.value,\r\n      damage: formCreate.damage.value,\r\n      difficulty: determineDifficulty(\r\n        formCreate.HP.value,\r\n        formCreate.damage.value\r\n      ),\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.status === 400) {\r\n        throw new Error(\r\n          'Too crazy monster stats'\r\n        );\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      notificationToggle('Monster created!');\r\n      window.localStorage.setItem('last created', JSON.stringify(data._id));\r\n      clearForm(formCreate);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      notificationToggle(error);\r\n    });\r\n};\r\n\r\nexport const getMonsterHandler = (event) => {\r\n  event.preventDefault();\r\n  const formDifficulty = document.getElementById('form-difficulty');\r\n  const difficulty = formDifficulty.querySelector('input[name=\"difficulty\"]:checked').value;\r\n  if (difficulty === 'last') {\r\n    const lastCreatedId = JSON.parse(window.localStorage.getItem('last created'));\r\n    \r\n    fetch('http://localhost:3000/lastcreated/' + lastCreatedId)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          throw new Error(\r\n            'Your last created monster escaped. Create another one'\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        window.randomMonster = {\r\n          name: data.name,\r\n          HP: data.HP,\r\n          damage: data.damage,\r\n        };\r\n        formCreate.removeEventListener('submit', createMonsterHandler);\r\n        formDifficulty.removeEventListener('submit', getMonsterHandler);\r\n        closingAnimation();\r\n        setTimeout(() => {\r\n          renderMonster();\r\n          fightMonster();\r\n        }, 600);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        notificationToggle(error);\r\n      });\r\n  } else {\r\n    fetch('http://localhost:3000/monster/' + difficulty)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          throw new Error(\r\n            'Could not find monster with selected difficulty, please create more'\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        window.randomMonster = {\r\n          name: data.name,\r\n          HP: data.HP,\r\n          damage: data.damage,\r\n        };\r\n        formCreate.removeEventListener('submit', createMonsterHandler);\r\n        formDifficulty.removeEventListener('submit', getMonsterHandler);\r\n        closingAnimation();\r\n        setTimeout(() => {\r\n          renderMonster();\r\n          fightMonster();\r\n        }, 600);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        notificationToggle(error);\r\n      });\r\n  }\r\n};\r\n\r\nformCreate.addEventListener('submit', createMonsterHandler);\r\nformDifficulty.addEventListener('submit', getMonsterHandler);"]}