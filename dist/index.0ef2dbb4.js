const e=()=>{const e=document.getElementById("background");e.innerHTML="",e.innerHTML=`\n    <section>\n    <section class="up up-close">\n      <h1 class="monster-name">${randomMonster.name} HP:</h1>\n      <progress id="monster-hp" max="" value=""></progress>\n      <h1 class="player">Your HP:</h1>\n      <progress id="player-hp" max="" value=""></progress>\n      <div class="fight-container">\n        <button id="att-btn" class="fight-btn">Attack</button>\n        <button id="heavy-att-btn" class="fight-btn">Heavy Attack</button>\n      </div>\n    </section>\n    </section>\n    <section>\n    <section class="down down-close">\n      <div class="heal">\n        <button id="heal-btn" class="fight-btn">Heal</button>\n      </div>\n      <button id="retry-btn">Retry</button>\n      <button id="home-btn">Create another monster</button>\n    </section>\n    </section>\n  `,setTimeout((()=>{m()}),100)};var t,n,o,a,s={};t=s,n="fightMonster",o=()=>r,a=e=>r=e,Object.defineProperty(t,n,{get:o,set:a,enumerable:!0,configurable:!0});const i=()=>{const e=document.getElementById("background");e.innerHTML="",e.innerHTML='\n  <section>\n  <section class="up up-close">\n      <h1 class="top-heading">Create your monster</h1>\n      <form id="form-create">\n        <label for="name">Name:</label>\n        <input id="name" type="text" pattern="[a-zA-Z0-9]{2,20}" title="2 to 20 letters, no special characters" required="required" autocomplete="off">\n        <label for="HP">HP:</label>\n        <input id="HP" type="number" min="15" max="160">\n        <label for="damage">Damage:</label>\n        <input id="damage" type="number" min="5" max="30">\n        <button type="submit">Create</button>\n      </form>\n      \x3c!-- <div class="border"></div> --\x3e\n    </section>\n    </section>\n    <section>\n    <section class="down down-close">\n      <h1 class="bottom-heading">Select difficulty:</h1>\n      <form id="form-difficulty">\n          <ul>\n            <li>\n              <input name="difficulty" id="easy" value="easy" type="radio" checked="checked" class="circle">\n              <label for="easy">Easy</label>\n            </li>\n            <li>\n              <input name="difficulty" id="medium" value="medium" type="radio" class="circle">\n              <label for="medium">Medium</label>\n              </li>\n              <li>\n                <input name="difficulty" id="hard" value="hard" type="radio" class="circle">\n                <label for="hard">Hard</label>\n              </li>\n              <li class="last">\n                <input name="difficulty" id="last" value="last" type="radio" class="circle">\n                <label for="last">Last Created</label>\n              </li>\n              <li class="last">\n                <button id="fight-monster-btn" type="submit">Fight monster</button>\n              </li>\n            </ul>\n        </form>\n    </section>\n    </section>\n',setTimeout((()=>{m()}),100);const t=document.getElementById("form-create"),n=document.getElementById("form-difficulty");n.querySelector('input[name="difficulty"]:checked').value;t.addEventListener("submit",u),n.addEventListener("submit",f)},r=()=>{let e,t=+randomMonster.HP,n=+randomMonster.damage;const o=100;let a,s;const r=document.getElementById("monster-hp"),l=document.getElementById("player-hp"),c=document.getElementById("att-btn"),u=document.getElementById("heavy-att-btn"),f=document.getElementById("heal-btn"),g=document.getElementById("retry-btn"),y=document.getElementById("home-btn"),h=t=>{r.max=t,r.value=t,e=t,l.max=o,l.value=o,a=o,s=!0},v=()=>Math.round(10*(Math.random()-.5)),b=()=>{let e=n+v();e<0&&(e=0),a-=e,l.value=a},p=()=>{let t=10+v();e-=t,r.value=e,b(),w()},E=()=>{let t=18+v();e-=t,r.value=e,b(),w()||b()},L=()=>{s?(a+=45+v(),a>=o?(a=o,l.value=a):l.value=a,s=!1,b(),w()):d("No healing uses left","stay")},w=()=>e<=0&&a>=0?(d("You won!","stay"),h(t),!0):a<=0&&e>=0?(d("You lost!","stay"),h(t),!0):e<=0&&a<=0?(d("Draw!","stay"),h(t),!0):void 0;h(t),c.addEventListener("click",p),u.addEventListener("click",E),f.addEventListener("click",L),g.addEventListener("click",h.bind(void 0,t)),y.addEventListener("click",(()=>{c.removeEventListener("click",p),u.removeEventListener("click",E),f.removeEventListener("click",L),g.removeEventListener("click",h.bind(void 0,t)),y.removeEventListener("click",i),m(),setTimeout((()=>{i()}),600)}))},l=document.getElementById("form-create"),c=document.getElementById("form-difficulty"),d=(e,t="timed")=>{const n=document.querySelector(".notification"),o=document.querySelector("#notificationType");n.classList.toggle("active"),o.classList.toggle("notificationText"),o.innerText=`${e}`;const a=()=>{o.innerText="",n.classList.toggle("active"),o.classList.toggle("notificationText"),window.removeEventListener("mouseup",a)};"stay"===t?window.addEventListener("mouseup",a):setTimeout(a,2e3)},m=()=>{document.querySelector(".up").classList.toggle("up-close"),document.querySelector(".down").classList.toggle("down-close")},u=e=>{e.preventDefault();const t=document.getElementById("form-create");var n,o;fetch("https://monster-rng-back.herokuapp.com/add-monster",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t.name.value.toUpperCase(),HP:t.HP.value,damage:t.damage.value,difficulty:(n=t.HP.value,o=t.damage.value,o<=12&&n<=70||o<=7&&n<=130||o<=30&&n<=25?"easy":o<=15&&n<=80||o<=9&&n<=140||o<=30&&n<=35?"medium":"hard")})}).then((e=>{if(400===e.status)throw new Error("Too crazy monster stats");return e.json()})).then((e=>{console.log(e),d("Monster created!"),window.localStorage.setItem("last created",JSON.stringify(e._id)),t.reset()})).catch((e=>{console.log(e),d(e)}))},f=t=>{t.preventDefault();const n=document.getElementById("form-difficulty"),o=n.querySelector('input[name="difficulty"]:checked').value;if("last"===o){const t=JSON.parse(window.localStorage.getItem("last created"));fetch("https://monster-rng-back.herokuapp.com/lastcreated/"+t).then((e=>{if(404===e.status)throw new Error("Your last created monster escaped. Create another one");return e.json()})).then((t=>{window.randomMonster={name:t.name,HP:t.HP,damage:t.damage},l.removeEventListener("submit",u),n.removeEventListener("submit",f),m(),setTimeout((()=>{e(),s.fightMonster()}),600)})).catch((e=>{console.log(e),d(e)}))}else fetch("https://monster-rng-back.herokuapp.com/monster/"+o).then((e=>{if(404===e.status)throw new Error("Could not find monster with selected difficulty, please create more");return e.json()})).then((t=>{window.randomMonster={name:t.name,HP:t.HP,damage:t.damage},l.removeEventListener("submit",u),n.removeEventListener("submit",f),m(),setTimeout((()=>{e(),s.fightMonster()}),600)})).catch((e=>{console.log(e),d(e)}))};l.addEventListener("submit",u),c.addEventListener("submit",f);export{m as closingAnimation,d as notificationToggle,f as getMonsterHandler,u as createMonsterHandler};
//# sourceMappingURL=index.0ef2dbb4.js.map
