{"mappings":"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","sources":["assets/scripts/renderMonster.js","assets/scripts/renderHome.js","assets/scripts/fightMonster.js","assets/scripts/createMonster.js","assets/scripts/difficulty.js"],"sourcesContent":["import { closingAnimation } from './createMonster.js';\r\n\r\nexport const renderMonster = () => {\r\n    const mainBody = document.getElementById('background');\r\n    mainBody.innerHTML = '';\r\n    mainBody.innerHTML = `\r\n    <section>\r\n    <section class=\"up up-close\">\r\n      <h1 class=\"monster-name\">${randomMonster.name} HP:</h1>\r\n      <progress id=\"monster-hp\" max=\"\" value=\"\"></progress>\r\n      <h1 class=\"player\">Your HP:</h1>\r\n      <progress id=\"player-hp\" max=\"\" value=\"\"></progress>\r\n      <div class=\"fight-container\">\r\n        <button id=\"att-btn\" class=\"fight-btn\">Attack</button>\r\n        <button id=\"heavy-att-btn\" class=\"fight-btn\">Heavy Attack</button>\r\n      </div>\r\n    </section>\r\n    </section>\r\n    <section>\r\n    <section class=\"down down-close\">\r\n      <div class=\"heal\">\r\n        <button id=\"heal-btn\" class=\"fight-btn\">Heal</button>\r\n      </div>\r\n      <button id=\"retry-btn\">Retry</button>\r\n      <button id=\"home-btn\">Create another monster</button>\r\n    </section>\r\n    </section>\r\n  `;\r\n  setTimeout(() => {\r\n    closingAnimation();\r\n  }, 100);\r\n};\r\n","import { getMonsterHandler } from './createMonster.js';\r\nimport { createMonsterHandler } from './createMonster.js';\r\nimport { closingAnimation } from './createMonster.js';\r\n\r\nexport const renderHome = () => {\r\n  const mainBody = document.getElementById('background');\r\n  mainBody.innerHTML = '';\r\n  mainBody.innerHTML = `\r\n  <section>\r\n  <section class=\"up up-close\">\r\n      <h1 class=\"top-heading\">Create your monster</h1>\r\n      <form id=\"form-create\">\r\n        <label for=\"name\">Name:</label>\r\n        <input id=\"name\" type=\"text\" minlength=\"2\" maxlength=\"20\">\r\n        <label for=\"HP\">HP:</label>\r\n        <input id=\"HP\" type=\"number\" min=\"15\" max=\"160\">\r\n        <label for=\"damage\">Damage:</label>\r\n        <input id=\"damage\" type=\"number\" min=\"5\" max=\"30\">\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n      <!-- <div class=\"border\"></div> -->\r\n    </section>\r\n    </section>\r\n    <section>\r\n    <section class=\"down down-close\">\r\n      <h1 class=\"bottom-heading\">Select difficulty:</h1>\r\n      <form id=\"form-difficulty\">\r\n          <ul>\r\n            <li>\r\n              <input name=\"difficulty\" id=\"easy\" value=\"easy\" type=\"radio\" checked=\"checked\" class=\"circle\">\r\n              <label for=\"easy\">Easy</label>\r\n            </li>\r\n            <li>\r\n              <input name=\"difficulty\" id=\"medium\" value=\"medium\" type=\"radio\" class=\"circle\">\r\n              <label for=\"medium\">Medium</label>\r\n              </li>\r\n              <li>\r\n                <input name=\"difficulty\" id=\"hard\" value=\"hard\" type=\"radio\" class=\"circle\">\r\n                <label for=\"hard\">Hard</label>\r\n              </li>\r\n              <li class=\"last\">\r\n                <input name=\"difficulty\" id=\"last\" value=\"last\" type=\"radio\" class=\"circle\">\r\n                <label for=\"last\">Last Created</label>\r\n              </li>\r\n              <li class=\"last\">\r\n                <button id=\"fight-monster-btn\" type=\"submit\">Fight random monster</button>\r\n              </li>\r\n            </ul>\r\n        </form>\r\n    </section>\r\n    </section>\r\n`;\r\nsetTimeout(() => {\r\n  closingAnimation();\r\n}, 100);\r\n  const formCreate = document.getElementById('form-create');\r\n  const formDifficulty = document.getElementById('form-difficulty');\r\n  const difficulty = formDifficulty.querySelector('input[name=\"difficulty\"]:checked').value;\r\n\r\n  formCreate.addEventListener('submit', createMonsterHandler);\r\n  formDifficulty.addEventListener('submit', getMonsterHandler);\r\n};\r\n","import { renderHome } from './renderHome.js';\r\nimport { closingAnimation, notificationToggle } from './createMonster.js';\r\n\r\nexport const fightMonster = () => {\r\n  let monsterMaxHp = +randomMonster.HP;\r\n  let monsterDamage = +randomMonster.damage;\r\n  let currentMonsterHp;\r\n\r\n  const playerMaxHp = 100;\r\n  const playerDamage = 10;\r\n  let currentPlayerHp;\r\n  let healUses;\r\n\r\n  const monsterHpProg = document.getElementById('monster-hp');\r\n  const playerHpProg = document.getElementById('player-hp');\r\n  const attackBtn = document.getElementById('att-btn');\r\n  const heavyAttackkBtn = document.getElementById('heavy-att-btn');\r\n  const healBtn = document.getElementById('heal-btn');\r\n  const retryBtn = document.getElementById('retry-btn');\r\n  const homeBtn = document.getElementById('home-btn');\r\n\r\n  const setMaxHp = (monsterHp) => {\r\n    monsterHpProg.max = monsterHp;\r\n    monsterHpProg.value = monsterHp;\r\n    currentMonsterHp = monsterHp;\r\n\r\n    playerHpProg.max = playerMaxHp;\r\n    playerHpProg.value = playerMaxHp;\r\n    currentPlayerHp = playerMaxHp;\r\n    healUses = true;\r\n  };\r\n\r\n  const randomDamage = () => {\r\n    return Math.round((Math.random() - 0.5) * 10);\r\n  };\r\n\r\n  const monsterAttack = () => {\r\n    let monsterDmg = monsterDamage + randomDamage();\r\n    if (monsterDmg < 0) {\r\n      monsterDmg = 0;\r\n    }\r\n    currentPlayerHp -= monsterDmg;\r\n    playerHpProg.value = currentPlayerHp;\r\n  };\r\n\r\n  const playerAttack = () => {\r\n    let playerDmg = playerDamage + randomDamage();\r\n    currentMonsterHp -= playerDmg;\r\n    monsterHpProg.value = currentMonsterHp;\r\n    monsterAttack();\r\n    checkWin();\r\n  };\r\n\r\n  const playerHeavyAtt = () => {\r\n    let playerDmg = playerDamage * 1.8 + randomDamage();\r\n    currentMonsterHp -= playerDmg;\r\n    monsterHpProg.value = currentMonsterHp;\r\n    monsterAttack();\r\n    if (checkWin()) {\r\n      return;\r\n    } else {\r\n      monsterAttack();\r\n    }\r\n  };\r\n\r\n  const playerHeal = () => {\r\n    if (healUses) {\r\n      currentPlayerHp += 45 + randomDamage();\r\n      if (currentPlayerHp >= playerMaxHp) {\r\n        currentPlayerHp = playerMaxHp;\r\n        playerHpProg.value = currentPlayerHp;\r\n      } else {\r\n        playerHpProg.value = currentPlayerHp;\r\n      }\r\n      healUses = false;\r\n      monsterAttack();\r\n      checkWin();\r\n    } else {\r\n      notificationToggle('No healing uses left', 'stay');\r\n    }\r\n  };\r\n\r\n  const checkWin = () => {\r\n    if (currentMonsterHp <= 0 && currentPlayerHp >= 0) {\r\n      notificationToggle('You won!', 'stay');\r\n      setMaxHp(monsterMaxHp);\r\n      return true;\r\n    } else if (currentPlayerHp <= 0 && currentMonsterHp >= 0) {\r\n      notificationToggle('You lost!', 'stay');\r\n      setMaxHp(monsterMaxHp);\r\n      return true;\r\n    } else if (currentMonsterHp <= 0 && currentPlayerHp <= 0) {\r\n      notificationToggle('Draw!', 'stay');\r\n      setMaxHp(monsterMaxHp);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const clearListenersRenderHomeHandler = () => {\r\n    attackBtn.removeEventListener('click', playerAttack);\r\n    heavyAttackkBtn.removeEventListener('click', playerHeavyAtt);\r\n    healBtn.removeEventListener('click', playerHeal);\r\n    retryBtn.removeEventListener('click', setMaxHp.bind(this, monsterMaxHp));\r\n    homeBtn.removeEventListener('click', renderHome);\r\n    closingAnimation();\r\n    setTimeout(() => {\r\n      renderHome();\r\n    }, 600);\r\n  };\r\n\r\n  setMaxHp(monsterMaxHp);\r\n\r\n  attackBtn.addEventListener('click', playerAttack);\r\n  heavyAttackkBtn.addEventListener('click', playerHeavyAtt);\r\n  healBtn.addEventListener('click', playerHeal);\r\n\r\n  retryBtn.addEventListener('click', setMaxHp.bind(this, monsterMaxHp));\r\n\r\n  homeBtn.addEventListener('click', clearListenersRenderHomeHandler);\r\n};\r\n","import { renderMonster } from './renderMonster.js';\r\nimport { determineDifficulty } from './difficulty.js';\r\nimport { fightMonster } from './fightMonster.js';\r\n\r\nconst formCreate = document.getElementById('form-create');\r\nconst formDifficulty = document.getElementById('form-difficulty');\r\n\r\nconst clearForm = (form) => {\r\n  form.reset();\r\n};\r\n\r\nexport const notificationToggle = (text, type = 'timed') => {\r\n  const notification = document.querySelector('.notification');\r\n  const notificationText = document.querySelector('#notificationType');\r\n  \r\n  notification.classList.toggle('active');\r\n  notificationText.classList.toggle('notificationText');\r\n  notificationText.innerText = `${text}`;\r\n\r\n  const notificationHandler = () => {\r\n    notificationText.innerText = ``;\r\n    notification.classList.toggle('active');\r\n    notificationText.classList.toggle('notificationText');\r\n    window.removeEventListener('mouseup', notificationHandler);\r\n  };\r\n  \r\n  if (type === 'stay') {\r\n    window.addEventListener('mouseup', notificationHandler);\r\n  } else {\r\n    setTimeout(notificationHandler, 2000);\r\n  }\r\n};\r\n\r\nexport const closingAnimation = () => {\r\n  document.querySelector('.up').classList.toggle('up-close');\r\n  document.querySelector('.down').classList.toggle('down-close');\r\n};\r\n\r\nexport const createMonsterHandler = (event) => {\r\n  event.preventDefault();\r\n  const formCreate = document.getElementById('form-create');\r\n  fetch('http://monster-rng-back.herokuapp.com/add-monster', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      name: formCreate.name.value.toUpperCase(),\r\n      HP: formCreate.HP.value,\r\n      damage: formCreate.damage.value,\r\n      difficulty: determineDifficulty(\r\n        formCreate.HP.value,\r\n        formCreate.damage.value\r\n      ),\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.status === 400) {\r\n        throw new Error(\r\n          'Too crazy monster stats'\r\n        );\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      notificationToggle('Monster created!');\r\n      window.localStorage.setItem('last created', JSON.stringify(data._id));\r\n      clearForm(formCreate);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      notificationToggle(error);\r\n    });\r\n};\r\n\r\nexport const getMonsterHandler = (event) => {\r\n  event.preventDefault();\r\n  const formDifficulty = document.getElementById('form-difficulty');\r\n  const difficulty = formDifficulty.querySelector('input[name=\"difficulty\"]:checked').value;\r\n  if (difficulty === 'last') {\r\n    const lastCreatedId = JSON.parse(window.localStorage.getItem('last created'));\r\n    \r\n    fetch('http://monster-rng-back.herokuapp.com/lastcreated/' + lastCreatedId)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          throw new Error(\r\n            'Your last created monster escaped. Create another one'\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        window.randomMonster = {\r\n          name: data.name,\r\n          HP: data.HP,\r\n          damage: data.damage,\r\n        };\r\n        formCreate.removeEventListener('submit', createMonsterHandler);\r\n        formDifficulty.removeEventListener('submit', getMonsterHandler);\r\n        closingAnimation();\r\n        setTimeout(() => {\r\n          renderMonster();\r\n          fightMonster();\r\n        }, 600);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        notificationToggle(error);\r\n      });\r\n  } else {\r\n    fetch('http://monster-rng-back.herokuapp.com/monster/' + difficulty)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          throw new Error(\r\n            'Could not find monster with selected difficulty, please create more'\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        window.randomMonster = {\r\n          name: data.name,\r\n          HP: data.HP,\r\n          damage: data.damage,\r\n        };\r\n        formCreate.removeEventListener('submit', createMonsterHandler);\r\n        formDifficulty.removeEventListener('submit', getMonsterHandler);\r\n        closingAnimation();\r\n        setTimeout(() => {\r\n          renderMonster();\r\n          fightMonster();\r\n        }, 600);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        notificationToggle(error);\r\n      });\r\n  }\r\n};\r\n\r\nformCreate.addEventListener('submit', createMonsterHandler);\r\nformDifficulty.addEventListener('submit', getMonsterHandler);","export const determineDifficulty = (hp, damage) => {\r\n  if (damage <= 12 && hp <= 70 || damage <= 7 && hp <= 130 || damage <= 30 && hp <= 25) {\r\n    return 'easy'\r\n  } else if (damage <= 15 && hp <= 80 || damage <= 9 && hp <= 140 || damage <= 30 && hp <= 35)   {\r\n    return 'medium'\r\n  } else {\r\n    return 'hard'\r\n  }\r\n}"],"names":["$0ef1e60596c2afeabfb9353b3bbb141f$export$1375d0605a9dd1f7","mainBody","document","getElementById","innerHTML","randomMonster","name","setTimeout","$2d11e4610e03ea7d730a03feabfa3854$export$9ee0e55dde071824","$cff078f0470248094756d48451f8f230$export$f0f1769efa86fe1c","formCreate","formDifficulty","querySelector","value","addEventListener","$2d11e4610e03ea7d730a03feabfa3854$export$22adb7a78ad28b67","$2d11e4610e03ea7d730a03feabfa3854$export$98de0f639d252d81","$3e98f27b51219868a74a33a883ad82bd$export$b2179211296e180","currentMonsterHp","monsterMaxHp","HP","monsterDamage","damage","playerMaxHp","currentPlayerHp","healUses","monsterHpProg","playerHpProg","attackBtn","heavyAttackkBtn","healBtn","retryBtn","homeBtn","setMaxHp","monsterHp","max","randomDamage","Math","round","random","monsterAttack","monsterDmg","playerAttack","playerDmg","checkWin","playerHeavyAtt","playerDamage","playerHeal","$2d11e4610e03ea7d730a03feabfa3854$export$4a9e4aeb044a2520","bind","undefined","removeEventListener","$2d11e4610e03ea7d730a03feabfa3854$var$formCreate","$2d11e4610e03ea7d730a03feabfa3854$var$formDifficulty","text","type","notification","notificationText","classList","toggle","innerText","notificationHandler","window","event","preventDefault","hp","fetch","method","headers","body","JSON","stringify","toUpperCase","difficulty","then","response","status","Error","json","data","console","log","localStorage","setItem","_id","reset","catch","error","lastCreatedId","parse","getItem","$3e98f27b51219868a74a33a883ad82bd$exports","fightMonster"],"version":3,"file":"index.HASH_REF_e438b78d4a418ede11a84519e463df3e.js.map","sourceRoot":"/"}