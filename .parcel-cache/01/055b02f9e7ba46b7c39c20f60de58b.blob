import   "4da284d0e794dfd3fe6f3c1504de5f4b:./renderHome.js";
import   "4da284d0e794dfd3fe6f3c1504de5f4b:./createMonster.js";
const $4da284d0e794dfd3fe6f3c1504de5f4b$export$b2179211296e180 = ()=>{
    let monsterMaxHp = +randomMonster.HP;
    let monsterDamage = +randomMonster.damage;
    let currentMonsterHp;
    const playerMaxHp = 100;
    const playerDamage = 10;
    let currentPlayerHp;
    let healUses;
    const monsterHpProg = document.getElementById('monster-hp');
    const playerHpProg = document.getElementById('player-hp');
    const attackBtn = document.getElementById('att-btn');
    const heavyAttackkBtn = document.getElementById('heavy-att-btn');
    const healBtn = document.getElementById('heal-btn');
    const retryBtn = document.getElementById('retry-btn');
    const homeBtn = document.getElementById('home-btn');
    const setMaxHp = (monsterHp)=>{
        monsterHpProg.max = monsterHp;
        monsterHpProg.value = monsterHp;
        currentMonsterHp = monsterHp;
        playerHpProg.max = playerMaxHp;
        playerHpProg.value = playerMaxHp;
        currentPlayerHp = playerMaxHp;
        healUses = true;
    };
    const randomDamage = ()=>{
        return Math.round((Math.random() - 0.5) * 10);
    };
    const monsterAttack = ()=>{
        let monsterDmg = monsterDamage + randomDamage();
        if (monsterDmg < 0) monsterDmg = 0;
        currentPlayerHp -= monsterDmg;
        playerHpProg.value = currentPlayerHp;
    };
    const playerAttack = ()=>{
        let playerDmg = playerDamage + randomDamage();
        currentMonsterHp -= playerDmg;
        monsterHpProg.value = currentMonsterHp;
        monsterAttack();
        checkWin();
    };
    const playerHeavyAtt = ()=>{
        let playerDmg = playerDamage * 1.8 + randomDamage();
        currentMonsterHp -= playerDmg;
        monsterHpProg.value = currentMonsterHp;
        monsterAttack();
        if (checkWin()) return;
        else monsterAttack();
    };
    const playerHeal = ()=>{
        if (healUses) {
            currentPlayerHp += 45 + randomDamage();
            if (currentPlayerHp >= playerMaxHp) {
                currentPlayerHp = playerMaxHp;
                playerHpProg.value = currentPlayerHp;
            } else playerHpProg.value = currentPlayerHp;
            healUses = false;
            monsterAttack();
            checkWin();
        } else $4da284d0e794dfd3fe6f3c1504de5f4b$import$c535f661e751f8bf$4a9e4aeb044a2520('No healing uses left', 'stay');
    };
    const checkWin = ()=>{
        if (currentMonsterHp <= 0 && currentPlayerHp >= 0) {
            $4da284d0e794dfd3fe6f3c1504de5f4b$import$c535f661e751f8bf$4a9e4aeb044a2520('You won!', 'stay');
            setMaxHp(monsterMaxHp);
            return true;
        } else if (currentPlayerHp <= 0 && currentMonsterHp >= 0) {
            $4da284d0e794dfd3fe6f3c1504de5f4b$import$c535f661e751f8bf$4a9e4aeb044a2520('You lost!', 'stay');
            setMaxHp(monsterMaxHp);
            return true;
        } else if (currentMonsterHp <= 0 && currentPlayerHp <= 0) {
            $4da284d0e794dfd3fe6f3c1504de5f4b$import$c535f661e751f8bf$4a9e4aeb044a2520('Draw!', 'stay');
            setMaxHp(monsterMaxHp);
            return true;
        }
    };
    const clearListenersRenderHomeHandler = ()=>{
        attackBtn.removeEventListener('click', playerAttack);
        heavyAttackkBtn.removeEventListener('click', playerHeavyAtt);
        healBtn.removeEventListener('click', playerHeal);
        retryBtn.removeEventListener('click', setMaxHp.bind(undefined, monsterMaxHp));
        homeBtn.removeEventListener('click', $4da284d0e794dfd3fe6f3c1504de5f4b$import$e06d6eaf37b4466$f0f1769efa86fe1c);
        $4da284d0e794dfd3fe6f3c1504de5f4b$import$c535f661e751f8bf$9ee0e55dde071824();
        setTimeout(()=>{
            $4da284d0e794dfd3fe6f3c1504de5f4b$import$e06d6eaf37b4466$f0f1769efa86fe1c();
        }, 600);
    };
    setMaxHp(monsterMaxHp);
    attackBtn.addEventListener('click', playerAttack);
    heavyAttackkBtn.addEventListener('click', playerHeavyAtt);
    healBtn.addEventListener('click', playerHeal);
    retryBtn.addEventListener('click', setMaxHp.bind(undefined, monsterMaxHp));
    homeBtn.addEventListener('click', clearListenersRenderHomeHandler);
};
